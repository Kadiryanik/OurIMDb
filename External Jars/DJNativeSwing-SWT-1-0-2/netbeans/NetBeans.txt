Instructions to use DJ NativeSwing as modules in NetBeans.


The general idea is to replace DJNativeSwing-SWT.jar by its split version:
  - DJNativeSwing-SWTAPI.jar
  - DJNativeSwing-SWTCore.jar
Copies of the Core JAR can be linked to each SWT port in different modules, while the API JAR exposes the NativeSwing API and is able to locate the right Core module to use.


Here are the steps to follow:


1. Create main application
  With dependencies:
    - Auto Update Service
    - Lookup
    - Progress API

  Change compilation level to 1.6 -> to be set for all modules due to the use of certain annotations.


2. In "platform.properties", add this line:  
  run.args.extra=-J-Dsun.awt.disableMixing=true


3. Create wrapped library DJNS-SWT (chrriis.dj.nativeswing.swtimpl)
  With JARs (remove unneeded):
    - DJNativeSwing.jar
    - DJNativeSwing-SWTAPI.jar
    - jna_WindowUtils.jar
    - jna-4.0.0.jar
    - ckeditor_3.0.1.zip
    - FCKeditor_2.6.3.zip
    - TinyMCE_3.4.3.2.zip
    - MozillaInterfaces-1.8.1.3.jar
    - SyntaxHighlighter_1.5.1.zip
  With dependencies:
    - Auto Update Services
    - Lookup
    - Module System API
    - Progress API
    - Utilities API

  Add to module manifest:
    OpenIDE-Module-Install: chrriis/dj/nativeswing/swtimpl/netbeans/NativeCoreInstaller.class


4. Create platform-dependant modules
  For each platform to support (remove unwanted ones, package names are important!):
  Create module DJNativeSwing-SWTCore-win32-win32-x86 (chrriis.dj.nativeswing.swtcore.win32.win32.x86)
  Create module DJNativeSwing-SWTCore-win32-win32-x86_64 (chrriis.dj.nativeswing.swtcore.win32.win32.x86_64)
  Create module DJNativeSwing-SWTCore-gtk-linux-x86 (chrriis.dj.nativeswing.swtcore.gtk.linux.x86)
  Create module DJNativeSwing-SWTCore-gtk-linux-x86_64 (chrriis.dj.nativeswing.swtcore.gtk.linux.x86_64)
  Create module DJNativeSwing-SWTCore-cocoa-macosx-x86 (chrriis.dj.nativeswing.swtcore.cocoa.macosx.x86)
  Create module DJNativeSwing-SWTCore-cocoa-macosx-x86_64 (chrriis.dj.nativeswing.swtcore.cocoa.macosx.x86_64)
    with JARs:
      - DJNativeSwing-SWTCore.jar
      - swt-4.3-win32-win32-x86.jar (use appropriate JAR, with a different name for each platform)
    with dependencies:
      - DJNS-SWT
      - Lookup

  Change module type from Autoload to Regular.

  In each package (e.g.: chrriis.dj.nativeswing.swtcore.win32.win32.x86), create an APIProvider class:
      package chrriis.dj.nativeswing.swtcore.win32.win32.x86;
      import chrriis.dj.nativeswing.swtimpl.internal.NativeCoreObjectFactory;
      import chrriis.dj.nativeswing.swtimpl.netbeans.NativeCoreAPIProvider;
      import org.openide.util.lookup.ServiceProvider;
      @ServiceProvider(service=NativeCoreAPIProvider.class)
      public class APIProvider implements NativeCoreAPIProvider {
        @Override
        public NativeCoreObjectFactory getObjectFactory() {
          return new NativeCoreObjectFactory(APIProvider.class.getClassLoader());
        }
      }


5. Use it in your application
  With dependencies:
    - DJNS-SWT
    - Lookup
    - Utilities API

  In main UI class:
      static {
        NativeInterfaceNetBeansHandler.initialize();
      }

  Then it is ready:
      NativeInterface.open();
      JWebBrowser webBrowser = new JWebBrowser(options);
      ...
